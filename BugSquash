var mode = 2;
var times = 0;

var canvasX = 400;
var canvasY = 400;

var posX = 0;
var posY = 0;

var moveX = 0;
var moveY = 0;

var speedScaler = 1;

var newBug;

var score = 0;
var scoreMultiplier = 1;
var timeMileStone = 5;

var startingLives = 10;
var currentLives = startingLives;
var newLifeMilestone = 500

function setup() {
  createCanvas(canvasX, canvasY);
  
  
  //Generate inital randomPosition
  chooseRandPos(random([0,1,2,3]))  
}

function draw() {
  background(220);
  
  switch(mode){
    case 0:
      MainMode();
      break;
    case 1: 
      LoseMode();
      break;
    case 2:
      StartMode();
      break;
  }
  

  

}


function MainMode(){
  newBug = new Bug(posX, posY, moveX, moveY);
  
  push();
  newBug.createNewBug();
  newBug.moveBug();
  
  if((posX > canvasX) || (posY > canvasY) || (posX < 0) || (posY < 0)){
    currentLives -= 1;
    BugReset();
  }
  pop();
  
  HUD();
  gameScaler();
  
  if(score >= newLifeMilestone){
    currentLives += 1;
    newLifeMilestone *= 2;
  }
  
  if(currentLives <= 0){
    mode = 1;
    times = getCurrentTime();
  }
}  

function LoseMode(){
    text("You Lost!",150,150);
    
    textSize(18);
    text("Your Score:", 50, 200);
    text("Time Survived:", 225, 200);
    
    text(score, 50, 225);
    
    
    text(times, 225, 225);
     
    
}

function StartMode(){
  textSize(16);
  text("Click the targets before they move off screen!", 20, 50)  
  text("Be careful not to miss!", 20, 70);
  text("The longer you go the harder it gets,", 20, 100)
  text("rack up as many points as you can!", 20 , 120);
  
  text("Click the screen to start!", 20, 200);
}






//Resets bug to be used again
function BugReset(){
   posX = 0;
   posY = 0;

   moveX = 0;
   moveY = 0;
  
  chooseRandPos(random([0,1,2,3]))  
  
}

//Determines the speed and position of a new bug from a prewritten list of psuedo-random spots
function chooseRandPos(randNum){
  switch(randNum){
  //Left-Right and Up-Down
    case 0:
      posY = random(15, canvasY - 15);
      
      moveX = round(2 * speedScaler);
      break;
    case 1:
      posX = random(15, canvasX - 15);
      
      moveY = round(2 * speedScaler);
      break;
      
      
  //Right-Left and Down-Up
    case 2:
      posX = canvasX;
      posY = random(15, canvasY - 15);
      
      moveX = round(-2 * speedScaler);
      break;
    case 3:
      posX = random(15, canvasX - 15);
      posY = canvasY - 15;
      
      moveY = round(-2 * speedScaler);
      break;
  } 
  
  //For Debug purpouses
  //console.log(randNum);
}

function HUD(){
  
  var livesRectPosX = 10;
  
  fill('black');
  textSize(20);
  text("Score:", 10, 30);    
  text(score, 10, 50);
  
  text("Time:", 10, 80);
  text(getCurrentTime(),10,100);
  
  for(let i = 0; i < currentLives; i++){
    
    fill('rgba(0,255,0, 0.25)');
    rect(livesRectPosX, 350, 10, 20, 1);
    livesRectPosX += 20;
  }
}

function getCurrentTime(){
  return round(millis() / 1000);
}

function gameScaler(){
  if(getCurrentTime() >= timeMileStone){
    scoreMultiplier += 0.2;
    speedScaler += 0.1;
    
    timeMileStone += 10;
    console.log(scoreMultiplier);
    console.log(speedScaler);
  }  
  
}

function resetGame(){
  times = 0;
  score = 0;
  currentLives = 10;
  
  newLifeMilestone = 500;
  scoreMultiplier = 1;
  timeMilestone = 5;
}

function mouseClicked(){
  if(mode == 0){
    if(dist(mouseX, mouseY, posX, posY) < 40){
      score += round(20 * scoreMultiplier);
      BugReset();
  }
    else{
      currentLives -= 1;
    }
  }
  
  if(mode == 2){
    mode = 0;
  }
  if(mode == 1){
    mode = 2;
    resetGame();
  }
}




class Bug {
  constructor(x, y, speedX, speedY){
    this.x = x;
    this.y = y;
    this.speedX = speedX;
    this.speedY = speedY;
    
    
    
  }  
  
  moveBug(){
    posX += moveX;
    posY += moveY;
    translate(posX, posY);
  
  }
  
  createNewBug(){
    fill('white');
    this.bug = rect(this.x, this.y, 15);
  }
  
}
